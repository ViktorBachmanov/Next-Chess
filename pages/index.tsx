import type { InferGetStaticPropsType } from "next";
import Head from "next/head";
import styles from "../styles/Home.module.css";

import { useEffect, useMemo, createContext, Context } from "react";

import { db } from "../lib/db";

import { User, Game } from "../mobx/tables/types";

import Layout from "../components/Layout";

//import createMainTheme from "../features/theme/muiTheme";
import { LightStatus } from "../mobx/theme/types";

import { Storage } from "../constants";

//import { observer } from "mobx-react";
import RootStore from "../mobx/RootStore";
import Tables from "../mobx/tables/Tables";

//import Timer from "./Timer";

//export let timer: Timer;

export let StoreContext: Context<RootStore>;

function Home({
  users,
  games,
}: InferGetStaticPropsType<typeof getStaticProps>) {
  //timer = new Timer();

  //console.log("Home");

  let rootStore: RootStore;
  const allUsers = JSON.parse(users) as Array<User>;
  const allGames = JSON.parse(games) as Array<Game>;

  const myTables = new Tables(allUsers, allGames);

  rootStore = new RootStore(myTables);

  StoreContext = createContext<RootStore>(rootStore);

  useEffect(() => {
    rootStore.theme.setLightStatus(getInitialLightMode());

    const authToken = localStorage.getItem(Storage.TOKEN);
    if (authToken) {
      rootStore.auth.setToken(authToken);
    }

    function saveInLocalStorage() {
      localStorage.setItem(
        Storage.LIGHT_MODE,
        JSON.stringify(rootStore.theme.lightStatus)
      );

      localStorage.setItem(Storage.TOKEN, rootStore.auth.token);
    }
    window.addEventListener("beforeunload", saveInLocalStorage);

    return function cleanUp() {
      window.removeEventListener("beforeunload", saveInLocalStorage);
    };
  }, [rootStore.theme, rootStore.auth]);

  return (
    <div className={styles.container}>
      <Head>
        <title>Chess</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <StoreContext.Provider value={rootStore}>
        <Layout />
      </StoreContext.Provider>
    </div>
  );
}

// This function gets called at build time on server-side.
// It won't be called on client-side, so you can even do
// direct database queries.
export async function getStaticProps() {
  // Call an external API endpoint to get posts.
  // You can use any data fetching library

  let allUsers: User[];
  let allGames: Game[];

  [allUsers, allGames] = await Promise.all([
    db.query<User[]>("SELECT * FROM users ORDER BY rating DESC"),
    db.query<Game[]>("SELECT * FROM games ORDER BY id DESC"),
  ]);

  db.end();

  return {
    props: {
      users: JSON.stringify(allUsers),
      games: JSON.stringify(allGames),
    },
  };
}

export default Home;

//  helper functions

function getInitialLightMode(): LightStatus {
  const storageStatus = localStorage.getItem(Storage.LIGHT_MODE);
  if (storageStatus) {
    return JSON.parse(storageStatus);
  } else {
    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? LightStatus.DARK
      : LightStatus.LIGHT;
  }
}
